#!/bin/bash

REPO_PATH=$(dirname "$(dirname "$(realpath "$0")")")

echo "===== Cleanup pycache ====="
find "${REPO_PATH}/e2e_test_inputs" -name __pycache__ -exec rm -rf {} \+

cd "$REPO_PATH" || exit 1

for project in ./e2e_test_inputs/*; do
    project=${project#./}

    echo "===== Test $project ====="
    if [ -f "$REPO_PATH/$project/skip_main" ]; then
        echo "Skip testing main due to:"
        cat "$REPO_PATH/$project/skip_main"
    else
        echo "Test main..."
        pipenv run python3 "$project/main.py" 1>/dev/null || { echo "Test $project failed (execution of main)." >&2; exit 1; }
    fi

    echo "Test cycles..."
    if [ -f "$REPO_PATH/$project/packages" ]; then
        packages=""
        while read -r line; do
            for word in $line; do
                packages="$packages $REPO_PATH/$project/$word"
            done
        done <"$REPO_PATH/$project"/packages
    else
        packages="$REPO_PATH/$project/pkg"
    fi

    num_cycles="$(cat "$REPO_PATH/$project"/found_cycles)"
    # shellcheck disable=SC2086
    result=$(PYTHONPATH="." ./run-main --packages $packages --strategy johnson 2>&1)
    if [ "$result" == "Found $num_cycles import cycles" ]; then
       continue
    fi
    echo "Test $project failed (expect $num_cycles cycles, got '$result')." >&2
    exit 1
done

echo "===== Self test ====="
echo "Test cycles..."

result=$(PYTHONPATH="." ./run-main --packages "$REPO_PATH/py_import_cycles" --strategy johnson 2>&1)
if [ "$result" == "Found 0 import cycles" ]; then
   exit 0
fi
echo "Self test failed (expect 0 cycles, got '$result')." >&2
exit 1
